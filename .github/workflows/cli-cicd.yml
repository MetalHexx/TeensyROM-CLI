name: TeensyROM CLI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        configuration: [Release]
        include:
          - os: windows-latest
            rid: win-x64
          - os: ubuntu-latest
            rid: linux-x64
          - os: macos-latest
            rid: osx-x64

    env:
      Solution_Name: src/TeensyRom.Cli.sln
      Project_Path: src/TeensyRom.Cli/
      Project_Name: TeensyRom.Cli.csproj  

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/cache@v3
      with:
       path: ~/.nuget/packages
       key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
       restore-keys: |
         ${{ runner.os }}-nuget-

    - name: Extract Version From .csproj
      id: extract_version
      run: |
        $csprojPath = "${{ github.workspace }}/${{ env.Project_Path }}/${{ env.Project_Name }}"
        [xml]$csproj = Get-Content $csprojPath
        $version = $csproj.Project.PropertyGroup.Version
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "FILENAME=tr-cli-$version-${{ matrix.rid }}.zip" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Install .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore NuGet packages
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build Application
      run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-restore

    - name: Publish Application
      run: dotnet publish ${{ env.Project_Path }}${{ env.Project_Name }} -c ${{ matrix.configuration }} --self-contained true -r ${{ matrix.rid }} -o ${{ github.workspace }}/published/${{ matrix.rid }}/
      
    - name: Archive Build Artifacts
      run: 7z a ${{ steps.extract_version.outputs.FILENAME }} ${{ github.workspace }}/published/${{ matrix.rid }}/*
      shell: pwsh

    - name: Generate SHA256 for macOS build
      if: matrix.os == 'macos-latest'
      run: |
        shasum -a 256 ${{ steps.extract_version.outputs.FILENAME }} > mac-sha256.txt

    - name: Update Homebrew Formula in Existing Repo
      if: matrix.os == 'macos-latest'
      run: |
        FORMULA_PATH="Formula/teensyrom-cli.rb"
        SHA256=$(cat mac-sha256.txt | awk '{print $1}')
        sed -i '' 's/^  sha256.*/  sha256 "'$SHA256'"/' $FORMULA_PATH
        sed -i '' 's/^  url.*/  url "https:\/\/github.com\/MetalHexx\/TeensyROM-CLI\/releases\/download\/v${{ steps.extract_version.outputs.VERSION }}\/${{ steps.extract_version.outputs.FILENAME }}"/' $FORMULA_PATH
        sed -i '' 's/^  version.*/  version "${{ steps.extract_version.outputs.VERSION }}"/' $FORMULA_PATH

    - name: Commit Homebrew Changes
      if: matrix.os == 'macos-latest'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add Formula/teensyrom-cli.rb
        git commit -m "Update Homebrew formula for version ${{ steps.extract_version.outputs.VERSION }}"
        git push

    - name: Create and Upload Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.VERSION }}
        files: ${{ steps.extract_version.outputs.FILENAME }}
